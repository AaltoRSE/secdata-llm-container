Bootstrap: docker
From: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

%labels
  Author Yu Tian
  Container for running open-source LLMs with GPU support

# -------------------------------------------------------------------------
# Install system packages and Python libraries
  
%post
  # Install system packages
  apt-get update && apt-get install -y --no-install-recommends \
    build-essential git \
    python3-dev python3-pip \
    curl ca-certificates \
    libssl-dev libffi-dev \
    vim nano less htop \
    libopenblas-dev libopenmpi-dev \
    && rm -rf /var/lib/apt/lists/*

  # Install Miniforge with error checking
  MINIFORGE_URL="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
  if ! curl -L -o /tmp/miniforge.sh $MINIFORGE_URL; then
    echo "Failed to download Miniforge" >&2
    exit 1
  fi
  bash /tmp/miniforge.sh -b -p /opt/conda
  rm /tmp/miniforge.sh
  export PATH="/opt/conda/bin:$PATH"

  # Create environment and activate it
  conda env create -f /tmp/env.yml 
  echo "source /opt/conda/etc/profile.d/conda.sh" >> /etc/bash.bashrc
  echo "conda activate sec-llm-env" >> /etc/bash.bashrc
  
  # Initialize conda for all shell sessions
  /opt/conda/bin/conda init bash
  /opt/conda/bin/conda init zsh

  # Cleanup
  conda clean -a -y
  apt-get clean

# -------------------------------------------------------------------------
# Environment variables set on container start
%environment
  export TRANSFORMERS_OFFLINE=1
  export HF_DATASETS_OFFLINE=1
  export HF_HUB_OFFLINE=1
  export HF_HOME=/models/huggingface-hub
  export PYTHONUNBUFFERED=1
  export PATH=/opt/conda/bin:/usr/local/bin:$PATH
  export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH  # CUDA libraries
  export CUDA_HOME=/usr/local/cuda  # CUDA home
  
# -------------------------------------------------------------------------
# Run script
%runscript
  echo "Running: $@"
  . /opt/conda/etc/profile.d/conda.sh
  conda activate sec-llm-env
  exec python3 "$@"



